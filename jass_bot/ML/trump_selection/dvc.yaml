stages:
#  swisslos_balancing:
#    cmd: python -OO swisslos_balancing.py
#    deps:
#    - swisslos_balancing.py
#    - data/2018_10_18_trump.csv
#    - data/player_all_stat.json
#    params:
#    - swisslos_balancing.n_games_threshold
#    - swisslos_balancing.random_state
#    - swisslos_balancing.top_p
#    outs:
#    - data/swisslos_balanced.csv
  graf_pretrain:
    cmd: python -OO training.py graf
    deps:
    - training.py
    - data/graf-dataset-balanced
#     - data/swisslos_balanced_full.csv
    params:
    - pre_train.hidden_dim
    - pre_train.n_layers
    - pre_train.learning_rate
    - pre_train.batch_size
    - pre_train.max_epochs
    - pre_train.early_stop_patience
    outs:
    - dvclive/artifacts/trump_selection_pre_trained.ckpt
  swisslos_finetuning:
    cmd: python -OO training.py swisslos_full dvclive/artifacts/trump_selection_pre_trained.ckpt
    deps:
    - training.py
    - data/swisslos_balanced_full.csv
    - dvclive/artifacts/trump_selection_pre_trained.ckpt
    params:
    - fine_tune.learning_rate
    - fine_tune.batch_size
    - fine_tune.max_epochs
    - fine_tune.early_stop_patience
    outs:
    - dvclive/artifacts/trump_selection.ckpt
  evaluate_trump_model:
    cmd: python -OO evaluate_trump_model.py
    deps:
    - evaluate_trump_model.py
#    - dvclive/artifacts/trump_selection_pre_trained.ckpt
    - dvclive/artifacts/trump_selection.ckpt
    params:
    - evaluate_trump_model.checkpoint_path
    - evaluate_trump_model.time_budget
    - evaluate_trump_model.n_sets
    - evaluate_trump_model.points_threshold
    - evaluate_trump_model.num_workers
metrics:
- dvclive/metrics.json
plots:
- dvclive/plots/metrics:
    x: step
params:
- dvclive/params.yaml
